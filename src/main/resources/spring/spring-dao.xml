<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context 
             http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 配置整合Mybatis的过程 -->
	<!-- 1、配置数据库相关参数properities的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2、数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0数据源的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后，不自动commit提交 -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 获取连接失败，重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3、配置sqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 ，这里为什么是ref？因为dataSource需要的是一个对象 -->
		<property name="dataSource" ref="dataSource" />

		<!-- 配置mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />

		<!-- 扫描entity包，使用别名（实体类所在的包） -->
		<property name="typeAliasesPackage" value="com.lgk.o2o.entity" />
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4、配置扫描DAO接口所在的包，动态实现DAO接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory对象，这里为什么是value？因为sqlSessionFactoryBeanName需要的是一个字符串String -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.lgk.o2o.dao" />
	</bean>

</beans>